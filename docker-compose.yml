services:
  neo4j:
    image: neo4j:2025.03.0
    container_name: neo4j_container
    restart: unless-stopped
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      NEO4J_AUTH: neo4j/testpassword
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_security_procedures_allowlist: apoc.meta.data,apoc.*
      NEO4J_server_bolt_listen__address: ":7687"
      NEO4J_server_http_listen__address: ":7474"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - rag_network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "testpassword", "RETURN 1"]
      interval: 2s
      timeout: 10s
      retries: 5

  rag:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rag_container
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
    depends_on:
      neo4j:
        condition: service_healthy
    networks:
      - rag_network
    volumes:
      - ./data:/app/data

volumes:
  neo4j_data:
  neo4j_logs:

networks:
  rag_network:
    driver: bridge